{"version":3,"file":"module.cjs","sources":["src/module.js"],"sourcesContent":["/**\r\n * Generates a value based on the use of spaces or tab\r\n * @param {string} str\r\n * @returns {number}\r\n */\r\nexport const getValueIndentation = (str) =>\r\n    str.split(\"\").reduce((total, str) => (total += str.charCodeAt(0)), 0);\r\n\r\n/**\r\n * Separate the string into lines and calculate\r\n * the indentation by giving a depth number from 0\r\n * @param {string} content\r\n * @returns {[number,string][]}\r\n */\r\nexport function getIndentation(content) {\r\n    /**@type {number[]} */\r\n    const deep = [];\r\n    const lines = content.split(/\\n/).map((value) => {\r\n        const test = value.match(/^(\\s*)(.*)/);\r\n        const [, space, line] = test;\r\n        const indentation = getValueIndentation(space);\r\n        if (!deep.includes(indentation)) deep.push(indentation);\r\n        return [indentation, line];\r\n    });\r\n\r\n    deep.sort((a, b) => (a > b ? 1 : -1));\r\n\r\n    return lines.map(([indentation, line]) => [\r\n        deep.indexOf(indentation),\r\n        line,\r\n    ]);\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACY,MAAC,mBAAmB,GAAG,CAAC,GAAG;AACvC,IAAI,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,GAAG,MAAM,KAAK,IAAI,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAAS,cAAc,CAAC,OAAO,EAAE;AACxC;AACA,IAAI,MAAM,IAAI,GAAG,EAAE,CAAC;AACpB,IAAI,MAAM,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK,KAAK;AACrD,QAAQ,MAAM,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;AAC/C,QAAQ,MAAM,GAAG,KAAK,EAAE,IAAI,CAAC,GAAG,IAAI,CAAC;AACrC,QAAQ,MAAM,WAAW,GAAG,mBAAmB,CAAC,KAAK,CAAC,CAAC;AACvD,QAAQ,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AAChE,QAAQ,OAAO,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;AACnC,KAAK,CAAC,CAAC;AACP;AACA,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1C;AACA,IAAI,OAAO,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,WAAW,EAAE,IAAI,CAAC,KAAK;AAC9C,QAAQ,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC;AACjC,QAAQ,IAAI;AACZ,KAAK,CAAC,CAAC;AACP;;;;;"}