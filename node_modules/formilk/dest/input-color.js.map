{"version":3,"file":"input-color.js","sources":["../src/input-color.jsx"],"sourcesContent":["import { c, useProp, useRef } from \"atomico\";\r\nimport { useRender } from \"@atomico/hooks/use-render\";\r\nimport { useEventLabel } from \"./hooks/use-event-label.js\";\r\n\r\nconst style = /*css*/ `\r\n  :host{\r\n    display: inline-block;\r\n  }\r\n  ::slotted(input){\r\n    width: 100%;\r\n    height: 100%;\r\n    padding: 0px;\r\n    border: 0px;\r\n    opacity: 0;\r\n    position: absolute;\r\n    top: 0px;\r\n    left: 0px;\r\n  }\r\n\r\n  button{\r\n    width: 2rem;\r\n    height: 2rem;\r\n    padding: 0px;\r\n    background: var(--v);\r\n    border: .1rem solid var(--input-color_border);\r\n    display: inline-block;\r\n    border-radius: var(--input-color_radius);\r\n    position: relative;\r\n  }\r\n`;\r\n\r\nfunction color({ disabled }) {\r\n  const [value, setValue] = useProp(\"value\");\r\n  const refInput = useRef();\r\n  useRender(\r\n    () => (\r\n      <input\r\n        ref={refInput}\r\n        oninput={({ target }) => setValue(target.value)}\r\n        type=\"color\"\r\n        value={value}\r\n        disabled={disabled}\r\n        tabindex=\"-1\"\r\n      />\r\n    ),\r\n    [value]\r\n  );\r\n  useEventLabel(() => refInput.current.click());\r\n  return (\r\n    <host shadowDom>\r\n      <style>{style}</style>\r\n      <button style={`--v: ${value}`}>\r\n        <slot></slot>\r\n      </button>\r\n    </host>\r\n  );\r\n}\r\n\r\ncolor.props = {\r\n  value: {\r\n    type: String,\r\n    value: \"#000\",\r\n  },\r\n  disabled: { type: Boolean, reflect: true },\r\n};\r\n\r\nexport const InputColor = c(color);\r\n"],"names":[],"mappings":";;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;"}