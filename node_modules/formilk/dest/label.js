import { jsx } from 'atomico/jsx-runtime';
import { c, useRef } from 'atomico';
import { useSlot } from '@atomico/hooks/use-slot';

const style = /*css*/ `
  button{
    background: none;
    padding: 0;
    border: 0;
    text-align: left;
    max-width: 100%;
    display: flex;
    align-items: center;
  }
  slot{
    display: grid;
    grid-gap: var(--label_gap, 1rem);
    grid-template-columns: repeat(var(--c), auto);
    align-items: center;
  }
`;

function label() {
  const refSlot = useRef();
  const refInput = useRef();
  const slot = useSlot(refSlot);

  return (
    jsx('host', {
      shadowDom: true,
      onPreventLabel: (ev) => {
        ev.stopPropagation();
        refInput.delegateFocus = ev.detail;
        ev.preventDefault();
      },}
    
      , jsx('style', null, style)
      , jsx('button', {
        onclick: (ev) => {
          ev.stopPropagation();
          refInput.delegateFocus && refInput.delegateFocus();
        },}
      
        , jsx('slot', { ref: refSlot, style: `--c:${slot.length}`,})
      )
    )
  );
}

const Label = c(label);

export { Label };
//# sourceMappingURL=label.js.map